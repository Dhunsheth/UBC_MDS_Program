df
df[, 1]
x<-2
y<-seq(5,30,5)
x+y
a<-"a"
x<-8
x+a
b<-"8"
a+b
a
b
a+b
b+a
a+as.character(x)
as.character(x) + x
as.character(x) + a
a
b
a&b
x <- c(6:10)
x
names(x) <- c("first", "second", "third", "fourth", "fifth")
x['fourth']
x[['fourth']
]
x[['fourth']]
my_info <- list("Gema", 5.4, TRUE)
my_info
names(my_info)
my_info <- list(name = "Gema",
height = 5.4,
right_handed = TRUE)
names(my_info)
my_info[2]
my_info[2]+2
my_info[[2]]+2
my_info[4]
my_info[3]
my_info <- list(name = "Gema",
height = 5.4,
right_handed = TRUE,
courses = c("DATA531","DATA532"))
my_info
my_info[4]
my_info[4][2]
my_info[[4]][2]
my_info[4][2]
my_info[4]
my_info$courses
my_info["courses"]
df<- data.frame( name = c("I", "She", "They"),
hight = c(5.4, 6, 5.8),
right_handed = c(TRUE, FALSE, FALSE))
df
df[1]
df[1][0]
df[1][1]
df[1][2]
df[2]
df&height
df&hight
df
df&right_handed
str(df)
df
df[3][2]
df[3]
df[3,2]
df[3][2]
df$right_handed
df$hight
df$hight[0]
df$hight[1]
df[1]
df[1,1]
df[2]
df[,2]
df[1,]
df[1,]*3
df[2][3]
x<-5
if (x>5){print("hello")} else if (x==5) {print("2")} else {print("3")}
1
if (x>5){print("hello")} else if (x==5) {print("2")} else {print("3")}
system.file(package='tidyverse')
system.file(package='ggplot2')
library(tidyverse,quietly = TRUE)
data
data()
data("BJsales")
x<-data("BJsales")
x
x$BJsales
str(x)
data(BJsales)
x<-data(BJsales)
x
BJsales
x<-BJsales
x
str(x)
str(BJsales.lead)
1-pt(0.33,8)
2*(1-pt(0.33,8))
pt(-1.5383,8)
pt(-1.5383,8)*2
pt(-0.367,8)*2
-1.109/3.026
-3.755/2.441
2*(pt(-3.755/2.441,8))
2*(pt(-1.109/3.026,8))
install.packages("RMySQL")
dbname='workson', host='cosc304.ok.ubc.ca')
con <- dbConnect(RMySQL::MySQL(), user='dsheth', password='32376881',
dbname='workson', host='cosc304.ok.ubc.ca')
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(), user='dsheth', password='32376881',
dbname='workson', host='cosc304.ok.ubc.ca')
con
salary <- 45000
ename <- "L"
query <- sprintf( "SELECT pno, count(*) FROM emp JOIN workson on emp.eno =
workson.eno WHERE salary < '%s' and ename > '%s' GROUP BY pno", salary, ename)
res <- dbGetQuery(con, query)
res
setwd("C:/Users/Dhuns/Documents/ubc/school_work/block_2/data_540/lec_exercises")
library("RSQLite")
install.packages('RSQLite')
library("RSQLite")
library("DBI")
con <- dbConnect(RSQLite::SQLite(), ":memory:")
# Write data frame to table
testData <- data.frame(id = 1:5,
name=c("Abe", "Ben", "Cindy", "Dana", "Emma"))
dbWriteTable(con, "test", testData)
data <- dbGetQuery(con,"SELECT * FROM test")
data
# Disconnect
dbDisconnect(con)
setwd("C:/Users/Dhuns/Documents/ubc/school_work/block_2/data_570/submissions/570_lab_2")
knitr::opts_chunk$set(echo = TRUE)
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp
statedate
statedata
## Life Expectancy Data
pairs(state.x77)
# Now fit a standard linear model, and add the line to the plot in red.
data(state)
# renames the rows to 2-letter abbreviation of state names
statedata <- data.frame(state.x77,row.names=state.abb)
attach(statedata)
fit1 <- lm(Life.Exp~Illiteracy)
fit2 <- lm(Life.Exp~Illiteracy+Murder+HS.Grad+Frost)
fit <- lm(Life.Exp~., data = statedata)
summary(fit)
data(state)
statedata <- data.frame(state.x77,row.names=state.abb)
statedata
bp
bp[,2:]
bp[0,1]
bp[0,2]
bp
bp[2,2]
bp[2,2:]
bp[2,2:5]
bp[,2:7]
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp_fit <- lm(bp.BP~., data = bp[,2:7])
bp[1,2]
bp[1,2:4]
bp[1,1:4]
bp['BP']
bp.BP
bp[,1]
bp
knitr::opts_chunk$set(echo = TRUE)
## Life Expectancy Data
pairs(state.x77)
# Now fit a standard linear model, and add the line to the plot in red.
data(state)
# renames the rows to 2-letter abbreviation of state names
statedata <- data.frame(state.x77,row.names=state.abb)
attach(statedata)
fit1 <- lm(Life.Exp~Illiteracy)
fit2 <- lm(Life.Exp~Illiteracy+Murder+HS.Grad+Frost)
fit <- lm(Life.Exp~., data = statedata)
summary(fit)
## Adjusted R^2 and BIC
library(leaps)
leaps=regsubsets(Life.Exp~.,data=statedata )
reg_summary = summary(leaps)
reg_summary$rsq
reg_summary$adjr2
plot(leaps, scale = "adjr2")
plot(leaps, scale = "bic")
## AIC
step(fit)
## Mixed step-wise selection
# Now, regressing Life.Exp on Population, regressing Life.Exp on Income,
# regressing Life.Exp on Illiteracy, d regressing Life.Exp on Murder, regressing Life.Exp
# on HS.Grad, regressing Life.Exp on Frost, and regressing Life.Exp on Area
summary(lm(Life.Exp~ Population, data=statedata))$coefficients[,4]
summary(lm(Life.Exp~ Income, data=statedata))$coefficients[,4]
summary(lm(Life.Exp~ Illiteracy, data=statedata))$coefficients[,4]
summary(lm(Life.Exp~ Murder, data=statedata))$coefficients[,4]
summary(lm(Life.Exp~ HS.Grad, data=statedata))$coefficients[,4]
summary(lm(Life.Exp~ Frost, data=statedata))$coefficients[,4]
summary(lm(Life.Exp~ Area, data=statedata))$coefficients[,4]
# The predictor Murder having the smallest t-test P-value it is 2.260070e-11. As a result
# of the first step, we enter Murder into our stepwise model.
# Now, following the step 2, we fit each of the two-predictor models that include Murder
# as a predictor
g1 <- lm(Life.Exp~ Murder, data=statedata)
summary(update(g1,. ~ . +Population))$coefficients[,4]
summary(update(g1,. ~ . +Income))$coefficients[,4]
summary(update(g1,. ~ . +Illiteracy))$coefficients[,4]
summary(update(g1,. ~ . +HS.Grad))$coefficients[,4]
summary(update(g1,. ~ . +Frost))$coefficients[,4]
summary(update(g1,. ~ . +Area))$coefficients[,4]
g2 <- update(g1,. ~ . +HS.Grad)
summary(update(g2,. ~ . +Population))$coefficients[,4]
summary(update(g2,. ~ . +Income))$coefficients[,4]
summary(update(g2,. ~ . +Illiteracy))$coefficients[,4]
summary(update(g2,. ~ . +Frost))$coefficients[,4]
summary(update(g2,. ~ . +Area))$coefficients[,4]
g3 <- update(g2,. ~ . +Frost)
summary(update(g3,. ~ . +Population))$coefficients[,4]
summary(update(g3,. ~ . +Income))$coefficients[,4]
summary(update(g3,. ~ . +Illiteracy))$coefficients[,4]
summary(update(g3,. ~ . +Area))$coefficients[,4]
g4 <- update(g3,. ~ . +Population)
summary(update(g4,. ~ . +Income))$coefficients[,4]
summary(update(g4,. ~ . +Illiteracy))$coefficients[,4]
summary(update(g4,. ~ . +Area))$coefficients[,4]
## Backward selection
bmod1 <- lm(Life.Exp~.-Area, data=statedata)
summary(bmod1)
# The above is equivalent to using the following command
fit <- update(fit, .~. - Area)
# We will continue our backwards selection method using the update() formula. Since
# Illiteracy has the highest p-value, we remove it from the model.
fit <- update(fit, .~. -Illiteracy)
summary(fit)
# Since Income has the highest p-value, we remove it from the model.
fit <- update(fit, .~. -Income)
summary(fit)
fit <- update(fit, .~. -Population)
summary(fit)
## Forward selection
# This procedure works the same way as stepwise regression except that once a predictor
# is entered into the model with the smallest p-value less than Î±enter = 0.1, it is never
# removed.
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp_fit <- lm(bp[,1]~., data = bp[,2:7])
bp_fit
library(leaps)
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp_fit <- lm(bp[,1]~., data = bp[,2:7])
leaps=regsubsets(bp[,1]~.,data=bp[,2:7] )
bp_reg_summary = summary(leaps)
bp_reg_summary$rsq
library(leaps)
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp_fit <- lm(bp[,1]~., data = bp[,2:7])
leaps=regsubsets(bp[,1]~.,data=bp[,2:7] )
bp_reg_summary = summary(leaps)
bp_reg_summary$adjr2
plot(leaps, scale = "adjr2")
library(leaps)
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp_fit <- lm(bp[,1]~., data = bp[,2:7])
leaps=regsubsets(bp[,1]~.,data=bp[,2:7] )
bp_reg_summary = summary(leaps)
bp_reg_summary$adjr2
plot(leaps, scale = "adjr2")
plot(leaps, scale = "bic")
library(leaps)
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp_fit <- lm(bp[,1]~., data = bp[,2:7])
leaps=regsubsets(bp[,1]~.,data=bp[,2:7] )
bp_reg_summary = summary(leaps)
bp_reg_summary$adjr2
plot(leaps, scale = "adjr2")
plot(leaps, scale = "bic")
library(leaps)
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp_fit <- lm(bp[,1]~., data = bp[,2:7])
leaps=regsubsets(bp[,1]~.,data=bp[,2:7] )
bp_reg_summary = summary(leaps)
bp_reg_summary$adjr2
plot(leaps, scale = "adjr2")
plot(leaps, scale = "bic")
bp_reg_summary
summary(bp_fit)
summary(lm(bp[,1]~ bp[,2], data=bp[,2:7]))$coefficients
bp
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(bp[,1]~Age , data=bp[,2:7]))$coefficients
statedata
# Step 1
summary(lm(bp[,1]~Age , data=bp[,2:7]))$coefficients[,4]
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(bp[,1]~Age , data=bp[,2:7]))$coefficients[,4]
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(bp[,1]~Age , data=bp[,2:7]))$coefficients
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(bp[,1]~Age , data=bp[,2:7]))$coefficients[,4]
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(bp[,1]~Age , data=bp[,2:7]))$coefficients
bp
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(bp[,1]~Age , data=bp[,2:7]))$coefficients[,4]
summary(lm(bp[,1]~Weight , data=bp[,2:7]))$coefficients[,4]
summary(lm(bp[,1]~BSA , data=bp[,2:7]))$coefficients[,4]
summary(lm(bp[,1]~Dur , data=bp[,2:7]))$coefficients[,4]
summary(lm(bp[,1]~Pulse , data=bp[,2:7]))$coefficients[,4]
summary(lm(bp[,1]~Stress, data=bp[,2:7]))$coefficients[,4]
bp['Age']
g1 <- lm(BP~ Weight, data=bp)
g1
summary(g1)
bp_fit <- lm(BP~., data = bp)
bp_fit
summary(bp_fit)
library(leaps)
bp=read.table("bloodpress.txt", header = TRUE, sep = "" )
bp_fit <- lm(BP~., data = bp)
leaps=regsubsets(BP~.,data=bp)
bp_reg_summary = summary(leaps)
bp_reg_summary$adjr2
plot(leaps, scale = "adjr2")
plot(leaps, scale = "bic")
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(BP~Age , data=bp))$coefficients[,4]
summary(lm(BP~Weight , data=bp))$coefficients[,4]
summary(lm(BP~BSA , data=bp))$coefficients[,4]
summary(lm(BP~Dur , data=bp))$coefficients[,4]
summary(lm(BP~Pulse , data=bp))$coefficients[,4]
summary(lm(BP~Stress, data=bp))$coefficients[,4]
# Weight has lowest p-value, so on first step enter Weight
g1 <- lm(bp[,1]~ Weight, data=bp[,2:7])
summary(update(g1,. ~ . +Population))$coefficients[,4]
bp
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(BP~Age , data=bp))$coefficients[,4]
summary(lm(BP~Weight , data=bp))$coefficients[,4]
summary(lm(BP~BSA , data=bp))$coefficients[,4]
summary(lm(BP~Dur , data=bp))$coefficients[,4]
summary(lm(BP~Pulse , data=bp))$coefficients[,4]
summary(lm(BP~Stress, data=bp))$coefficients[,4]
# Weight has lowest p-value, so on first step enter Weight
g1 <- lm(BP~ Weight, data=bp)
summary(update(g1,. ~ . +Age))$coefficients[,4]
summary(update(g1,. ~ . +BSA))$coefficients[,4]
summary(update(g1,. ~ . +Dur))$coefficients[,4]
summary(update(g1,. ~ . +Pulse))$coefficients[,4]
summary(update(g1,. ~ . +Stress))$coefficients[,4]
bp
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(BP~Age , data=bp))$coefficients[,4]
summary(lm(BP~Weight , data=bp))$coefficients[,4]
summary(lm(BP~BSA , data=bp))$coefficients[,4]
summary(lm(BP~Dur , data=bp))$coefficients[,4]
summary(lm(BP~Pulse , data=bp))$coefficients[,4]
summary(lm(BP~Stress, data=bp))$coefficients[,4]
# Weight has lowest p-value, so on first step enter Weight
g1 <- lm(BP~ Weight, data=bp)
summary(update(g1,. ~ . +Age))$coefficients[,4]
summary(update(g1,. ~ . +BSA))$coefficients[,4]
summary(update(g1,. ~ . +Dur))$coefficients[,4]
summary(update(g1,. ~ . +Pulse))$coefficients[,4]
summary(update(g1,. ~ . +Stress))$coefficients[,4]
# Age has the smallest p-value after regressing BP over Weight and Age
# Enter Age into stepwise model
# Go back and check t-test P-value for Weight - it is 6.86e-17 which is smaller than alpha_remove so continue on to 3rd step
g2 <- update(g1,. ~ . +Age)
summary(update(g2,. ~ . +BSA))$coefficients[,4]
summary(update(g2,. ~ . +Dur))$coefficients[,4]
summary(update(g2,. ~ . +Pulse))$coefficients[,4]
summary(update(g2,. ~ . +Stress))$coefficients[,4]
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(BP~Age , data=bp))$coefficients[,4]
summary(lm(BP~Weight , data=bp))$coefficients[,4]
summary(lm(BP~BSA , data=bp))$coefficients[,4]
summary(lm(BP~Dur , data=bp))$coefficients[,4]
summary(lm(BP~Pulse , data=bp))$coefficients[,4]
summary(lm(BP~Stress, data=bp))$coefficients[,4]
# Weight has lowest p-value, so on first step enter Weight
g1 <- lm(BP~ Weight, data=bp)
summary(update(g1,. ~ . +Age))$coefficients[,4]
summary(update(g1,. ~ . +BSA))$coefficients[,4]
summary(update(g1,. ~ . +Dur))$coefficients[,4]
summary(update(g1,. ~ . +Pulse))$coefficients[,4]
summary(update(g1,. ~ . +Stress))$coefficients[,4]
# Age has the smallest p-value after regressing BP over Weight and Age
# Enter Age into stepwise model
# Go back and check t-test P-value for Weight - it is 6.86e-17 which is smaller than alpha_remove so continue on to 3rd step
g2 <- update(g1,. ~ . +Age)
summary(update(g2,. ~ . +BSA))$coefficients[,4]
summary(update(g2,. ~ . +Dur))$coefficients[,4]
summary(update(g2,. ~ . +Pulse))$coefficients[,4]
summary(update(g2,. ~ . +Stress))$coefficients[,4]
# BSA has smallest p-value, and t-test for both Weight and Age is still below alpha_remove so continue.
g3 <- update(g2,. ~ . +BSA)
summary(update(g3,. ~ . +Dur))$coefficients[,4]
summary(update(g3,. ~ . +Pulse))$coefficients[,4]
summary(update(g3,. ~ . +Stress))$coefficients[,4]
6.575790e-01
7.764304e-03
summary(update(g3,. ~ . +Stress))$coefficients
summary(update(g3,. ~ . +Stress))
alpha_remove = 0.1
# Step 1
summary(lm(BP~Age , data=bp))$coefficients[,4]
summary(lm(BP~Weight , data=bp))$coefficients[,4]
summary(lm(BP~BSA , data=bp))$coefficients[,4]
summary(lm(BP~Dur , data=bp))$coefficients[,4]
summary(lm(BP~Pulse , data=bp))$coefficients[,4]
summary(lm(BP~Stress, data=bp))$coefficients[,4]
summary(lm(BP~. , data=bp))$coefficients[,4]
summary(lm(BP~. , data=bp))$coefficients
fit <- lm(BP~., data = statedata)
fit <- lm(BP~., data = bp)
summary(fit)
alpha_remove = 0.1
fit <- lm(BP~., data = bp)
# Step 1
summary(lm(BP~. , data=bp))$coefficients
# Dur predictor has the largest p-value, so remove this predictor.
fit <- update(fit, .~. - Dur)
summary(fit)$coefficients
alpha_remove = 0.1
fit <- lm(BP~., data = bp)
# Start backward regression procedure
summary(fit)$coefficients
# Dur predictor has the largest p-value, so remove this predictor.
fit <- update(fit, .~. - Dur)
summary(fit)$coefficients
# Pulse predictor has the largest p-value, so remove this predictor.
fit <- update(fit, .~. - Pulse)
summary(fit)$coefficients
3.003656e-01
alpha_remove = 0.1
fit <- lm(BP~., data = bp)
# Start backward regression procedure
summary(fit)$coefficients
# Dur predictor has the largest p-value, so remove this predictor and continue.
fit <- update(fit, .~. - Dur)
summary(fit)$coefficients
# Pulse predictor has the largest p-value, so remove this predictor and continue.
fit <- update(fit, .~. - Pulse)
summary(fit)$coefficients
# Stress predictor has the largest p-value, so remove this predictor and continue.
fit <- update(fit, .~. - Stress)
summary(fit)$coefficients
alpha_enter = 0.1
alpha_remove = 0.1
# Step 1
summary(lm(BP~Age , data=bp))$coefficients[,4]
summary(lm(BP~Weight , data=bp))$coefficients[,4]
summary(lm(BP~BSA , data=bp))$coefficients[,4]
summary(lm(BP~Dur , data=bp))$coefficients[,4]
summary(lm(BP~Pulse , data=bp))$coefficients[,4]
summary(lm(BP~Stress, data=bp))$coefficients[,4]
# Weight has lowest p-value, so on first step enter Weight
g1 <- lm(BP~ Weight, data=bp)
summary(update(g1,. ~ . +Age))$coefficients[,4]
summary(update(g1,. ~ . +BSA))$coefficients[,4]
summary(update(g1,. ~ . +Dur))$coefficients[,4]
summary(update(g1,. ~ . +Pulse))$coefficients[,4]
summary(update(g1,. ~ . +Stress))$coefficients[,4]
# Age has the smallest p-value after regressing BP over Weight and Age
# Enter Age into step wise model
# Go back and check t-test P-value for Weight - it is 6.86e-17 which is smaller
# than alpha_remove so continue on to 3rd step
g2 <- update(g1,. ~ . +Age)
summary(update(g2,. ~ . +BSA))$coefficients[,4]
summary(update(g2,. ~ . +Dur))$coefficients[,4]
summary(update(g2,. ~ . +Pulse))$coefficients[,4]
summary(update(g2,. ~ . +Stress))$coefficients[,4]
# BSA has smallest p-value, and t-test for both Weight and Age is still below
# alpha_remove so continue.
g3 <- update(g2,. ~ . +BSA)
summary(update(g3,. ~ . +Dur))$coefficients[,4]
summary(update(g3,. ~ . +Pulse))$coefficients[,4]
summary(update(g3,. ~ . +Stress))$coefficients[,4]
# All p-values for the remaining predictors are above our alpha_enter
# value, so we stop our step wise regression procedure.
summary(lm(BP~Age , data=bp))$coefficients[,4]
