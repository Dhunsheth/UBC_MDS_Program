length(x)
unique(x)
help("unique")
max(x)
sort(x, decreasing = TRUE)
x!<-1:5
x_!<-1:5
x
y<-3:8
y
y<-3:10
x & y
y&x
y<-3:7
y
x&y
x
y
y&x
x && y
x&&y
typeof(1L)
b<-1L
b
vect_1 <- c(-2, 2:10, 20)
vect_1`
vect_1
vect_2 <- seq(5,10)
vect_2
typeof(vect_2)
typeof(x)
x
typeof(vect_1)
vect_1
typeof(c(1:10))
weekdays <- c("Mon", "Tues", "Wed", "Thur", "Fri")
mixed_vec <- c(vect_2, weekdays)
mixed_vec
str(mixed_vec)
is.integer(vect_1)
as.integer(vect_1)
as.logical(vect_1)
x<-2
y<-seq(5,30,5)
x+y
x <- c(6:10)
x[c(1,3)]
x
my_info <- list(name = "Gema",
height = 5.4,
right_handed = TRUE,
courses = c("DATA531","DATA532"))
my_info[2]
df<- data.frame( name = c("I", "She", "They"),
hight = c(5.4, 6, 5.8),
right_handed = c(TRUE, FALSE, FALSE))
df
df[, 1]
x<-2
y<-seq(5,30,5)
x+y
a<-"a"
x<-8
x+a
b<-"8"
a+b
a
b
a+b
b+a
a+as.character(x)
as.character(x) + x
as.character(x) + a
a
b
a&b
x <- c(6:10)
x
names(x) <- c("first", "second", "third", "fourth", "fifth")
x['fourth']
x[['fourth']
]
x[['fourth']]
my_info <- list("Gema", 5.4, TRUE)
my_info
names(my_info)
my_info <- list(name = "Gema",
height = 5.4,
right_handed = TRUE)
names(my_info)
my_info[2]
my_info[2]+2
my_info[[2]]+2
my_info[4]
my_info[3]
my_info <- list(name = "Gema",
height = 5.4,
right_handed = TRUE,
courses = c("DATA531","DATA532"))
my_info
my_info[4]
my_info[4][2]
my_info[[4]][2]
my_info[4][2]
my_info[4]
my_info$courses
my_info["courses"]
df<- data.frame( name = c("I", "She", "They"),
hight = c(5.4, 6, 5.8),
right_handed = c(TRUE, FALSE, FALSE))
df
df[1]
df[1][0]
df[1][1]
df[1][2]
df[2]
df&height
df&hight
df
df&right_handed
str(df)
df
df[3][2]
df[3]
df[3,2]
df[3][2]
df$right_handed
df$hight
df$hight[0]
df$hight[1]
df[1]
df[1,1]
df[2]
df[,2]
df[1,]
df[1,]*3
df[2][3]
x<-5
if (x>5){print("hello")} else if (x==5) {print("2")} else {print("3")}
1
if (x>5){print("hello")} else if (x==5) {print("2")} else {print("3")}
system.file(package='tidyverse')
system.file(package='ggplot2')
library(tidyverse,quietly = TRUE)
data
data()
data("BJsales")
x<-data("BJsales")
x
x$BJsales
str(x)
data(BJsales)
x<-data(BJsales)
x
BJsales
x<-BJsales
x
str(x)
str(BJsales.lead)
1-pt(0.33,8)
2*(1-pt(0.33,8))
pt(-1.5383,8)
pt(-1.5383,8)*2
pt(-0.367,8)*2
-1.109/3.026
-3.755/2.441
2*(pt(-3.755/2.441,8))
2*(pt(-1.109/3.026,8))
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
knitr::opts_chunk$set(echo = TRUE)
library("DBI")
library("RMySQL")
library("RSQLite")
con <- dbConnect(RMySQL::MySQL(), user='dsheth', password='32376881',
dbname='tpch', host='cosc304.ok.ubc.ca')
part_2_query <- "
select ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate) as year,
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey and l_suppkey = ps_suppkey
group by ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
"
part_2_res <- dbGetQuery(con, part_2_query)
part_2_res[1:10,]
con_sqlite <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con_sqlite, "part_3_sqlite", part_2_res)
part_3_4_data <- dbGetQuery(con_sqlite,"SELECT * FROM part_3_sqlite")
part_3_4_data[1:10,]
part_5_query <- "
select *
from part_3_sqlite
where year = 2018 and ps_availqty < shippedQuantity
limit 5
"
part_5_data <- dbGetQuery(con_sqlite, part_5_query)
print('Products with insufficient inventory based on 2018 sales:')
part_5_data
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_data
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data[2:6,])
reg_est_2019 <- part_6_reg$coefficients[2] * 2019 + part_6_reg$coefficients[1]
reg_est_2019
part_6_data[2:6,]
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
reg_est_2019 <- part_6_reg$coefficients[2] * 2019 + part_6_reg$coefficients[1]
reg_est_2019
part_6_data
x <- rnorm(100)
x2 <- x^2
y <- 4+x+x2
plot(y~x)
reg <- lm(y~x+x2)
xx <- seq(-2,2, length.out=250)
lines(xx, predict(reg))
xx <- seq(-2,2, length.out=100)
lines(xx, predict(reg))
lines(xx, predict(lm(y~x+x2)))
xx <- seq(-2,2)
lines(xx, predict(lm(y~x+x2)))
lines(xx, predict(lm(y˜x+x2,
lines(xx, predict(lm(y~x+x2,
data.frame(x=xx)), col=’red’)
lines(xx, predict(lm(y~x+x2,data.frame(x=xx)), col=’red’)
lines(xx, predict(lm(y~x+x2)), data.frame(x=xx)), col=’red’)
lines(xx, predict(lm(y~x+x2), data.frame(x=xx)), col=’red’)
lines(xx, predict(lm(y~x+x2), data.frame(x=xx)), col="red")
xx <- seq(-2,2, length.out=100)
lines(xx, predict(lm(y~x+x2), data.frame(x=xx)), col="red")
lm(log(y)~x+I(x^2))
glm(y~x+I(x^2),family=poisson)
plot(y~x)
xx <- seq(-2,2, length.out=250)
lines(xx, predict(lm(y~x+I(xˆ2)), data.frame(x=xx)), col="red")
xx <- seq(-2,2, length.out=250)
lines(xx, predict(lm(y~x+I(x^2)), data.frame(x=xx)), col="red")
xx <- seq(-2,2, length.out=250)
lines(xx, predict(lm(log(y)~x+I(x^2)), data.frame(x=xx)), col="green")
xx <- seq(-2,2, length.out=250)
lines(xx, predict(lm(log(y)~x+I(x^2)), data.frame(x=xx)), col="green")
plot(y~x)
xx <- seq(-2,2, length.out=250)
lines(xx, predict(lm(log(y)~x+I(x^2)), data.frame(x=xx)), col="green")
reg_log <- lm(log(y)~x+I(x^2))
xx <- seq(-2,2, length.out=250)
lines(xx, predict(reg_log), data.frame(x=xx)), col="green")
xx <- seq(-2,2, length.out=250)
lines(xx, predict(reg_log), data.frame(x=xx)), col="red")
x <- rnorm(100)
x2 <- x^2
exp(y) <- 2+x+x2
y <- exp(2+x+x2)
plot(y~x)
lm(log(y)~x+I(x^2))
glm(y~x+I(x^2), family=poisson)
cig.glm <- glm(x~d, family = poisson)
x <- cigbutts$count; d <- cigbutts$distance
logit(y)
help(logit)
??log
help(log)
help(logit)
x <- rnorm(100)
y<- 2+x+x^2+runif(100)
plot(y~x)
lm(log(y)~x+I(x^2))
glm(y~x+I(x^2),family=poisson)
help(gaussian)
glm(y~x+I(x^2),family=gaussian)
plot(gaussian())
x <- rnorm(100)
lamda <- exp(1-x)
n <- rpois(100, lamda)
glm(n~x, family = poisson)
lm(log(n)~x)
x <- rnorm(100)
lamda <- exp(2+x+x^2)
n <- rpois(100, lamda)
glm(n~x+I(x^2), family = poisson)
lm(log(n)~x+I(x^2))
glm(n~x+I(x^2), family = gaussian)
plot(n~x)
x <- rnorm(100)
lamda <- exp(1-x)
n <- rpois(100, lamda)
plot(n~x)
glm(n~x, family = poisson)
lm(log(n)~x)
x <- rnorm(100)
lamda <- exp(1-x-x^2)
n <- rpois(100, lamda)
plot(n~x)
glm(n~x+I(x^2), family = poisson)
lm(log(n)~x+I(x^2))
x <- rnorm(100)
lamda <- exp(1+x+x^2)
n <- rpois(100, lamda)
plot(n~x)
glm(n~x+I(x^2),family=gaussian)
help("gaussian")
x <- rnorm(100)
y<-2+x+x^2+runif(100)
plot(y~x)
lm(y~x+I(x^2))
glm(y~x+I(x^2, family=gaussian)
)
glm(y~x+I(x^2), family=gaussian)
runif(100)
rnorm(100)
rnorm(100,0,1)
y<-2+x+x^2+rnorm(100)
plot(y~x)
plot(y~x)
setwd("C:/Users/Dhuns/Documents/ubc/school_work/block_2/data_570/submissions/570_lab_4")
install.packages('datarium', repos='http://cran.us.r-project.org')
library(datarium)
knitr::opts_chunk$set(echo = TRUE)
library(datarium)
marketing <- data("marketing", package = "datarium")
head(marketing)
marketing
knitr::opts_chunk$set(echo = TRUE)
library(datarium)
marketing_data <- data("marketing", package = "datarium")
head(marketing)
marketing_data
knitr::opts_chunk$set(echo = TRUE)
library(datarium)
data("marketing", package = "datarium")
head(marketing)
data
head(marketing)
marketing
reg <- lm(sales~youtube+facebook, data=marketing)
summary(reg)
reg <- lm(sales~youtube+facebook+youtube:facebook, data=marketing)
reg <- lm(sales~youtube+facebook+youtube:facebook, data=marketing)
summary(reg)
reg_part1 <- lm(sales~youtube+facebook, data=marketing)
print(summary(reg_part1))
reg_part2 <- lm(sales~youtube+facebook+youtube:facebook, data=marketing)
summary(reg_part2)
predicted_sales <- predict(reg_part2, newdata = data.frame(youtube = youtube_increase, facebook = facebook_cost, interaction = youtube_increase * facebook_cost))
facebook_cost <- 1000
youtube_increase <- 1000
predicted_sales <- predict(reg_part2, newdata = data.frame(youtube = youtube_increase, facebook = facebook_cost, interaction = youtube_increase * facebook_cost))
predicted_sales
summary(reg_part2)
summary(reg_part1)
summary(reg_part2)
summary(reg_part1)
x <- rnorm(100)
x2 <- x^2
lamda <- exp(1-x-2*x2)
n <- rpois(100, lamda)
pois_glm <- glm(n~x, family = poisson)
print(coef(pois_glm))
plot(n~x)
curve(exp(coef(pois_glm)[[1]]+coef(pois_glm)[[2]]*x+coef(pois_glm)[[3]]*x2), add=TRUE,col="red")
pois_glm <- glm(n~x, family = poisson)
pois_glm
x <- rnorm(100)
x2 <- x^2
lamda <- exp(1-x-2*x2)
n <- rpois(100, lamda)
pois_glm <- glm(n~x+x2, family = poisson)
print(coef(pois_glm))
plot(n~x)
curve(exp(coef(pois_glm)[[1]]+coef(pois_glm)[[2]]*x+coef(pois_glm)[[3]]*x2), add=TRUE,col="red")
x <- rnorm(100)
x2 <- x^2
lamda <- exp(1-x-2*x2)
n <- rpois(100, lamda)
pois_glm <- glm(n~x+x2, family = poisson)
print(coef(pois_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
p <- (exp(1-x-2*x2))/(1+exp(1-x-2*x2))
n <- rbinom(100, 1, prob=p)
binom_glm <- glm(n~x+x2, family = binomial)
print(coef(binom_glm))
x <- rnorm(100)
x2 <- x^2
lamda <- exp(1-x-2*x2)
n <- rpois(100, lamda)
pois_glm <- glm(n~x+x2, family = poisson)
print(coef(pois_glm))
summary(reg_part2)
reg_part2 <- lm(sales~youtube+facebook+youtube:facebook, data=marketing)
facebook_cost <- 1000
youtube_increase <- 1000
print(summary(reg_part2))
yt_increase <- 0.091(1000) + 0.00091(1000^2)
reg_part2 <- lm(sales~youtube+facebook+youtube:facebook, data=marketing)
facebook_cost <- 1000
youtube_increase <- 1000
print(summary(reg_part2))
yt_increase <- 0.091*(1000) + 0.00091*(1000^2)
fb_increase <- 0.029*(1000) + 0.00091*(1000^2)
reg_part2 <- lm(sales~youtube+facebook+youtube:facebook, data=marketing)
facebook_cost <- 1000
youtube_increase <- 1000
print(summary(reg_part2))
yt_increase <- 0.019*(1000) + 0.00091*(1000^2)
fb_increase <- 0.029*(1000) + 0.00091*(1000^2)
reg_part2 <- lm(sales~youtube+facebook+youtube:facebook, data=marketing)
facebook_cost <- 1000
youtube_increase <- 1000
print(summary(reg_part2))
yt_increase <- (1.910e-02)*(1000) + (9.054e-04)*(1000^2)
fb_increase <- (2.886e-02)*(1000) + (9.054e-04)*(1000^2)
