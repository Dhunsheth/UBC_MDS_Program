help("unique")
max(x)
sort(x, decreasing = TRUE)
x!<-1:5
x_!<-1:5
x
y<-3:8
y
y<-3:10
x & y
y&x
y<-3:7
y
x&y
x
y
y&x
x && y
x&&y
typeof(1L)
b<-1L
b
vect_1 <- c(-2, 2:10, 20)
vect_1`
vect_1
vect_2 <- seq(5,10)
vect_2
typeof(vect_2)
typeof(x)
x
typeof(vect_1)
vect_1
typeof(c(1:10))
weekdays <- c("Mon", "Tues", "Wed", "Thur", "Fri")
mixed_vec <- c(vect_2, weekdays)
mixed_vec
str(mixed_vec)
is.integer(vect_1)
as.integer(vect_1)
as.logical(vect_1)
x<-2
y<-seq(5,30,5)
x+y
x <- c(6:10)
x[c(1,3)]
x
my_info <- list(name = "Gema",
height = 5.4,
right_handed = TRUE,
courses = c("DATA531","DATA532"))
my_info[2]
df<- data.frame( name = c("I", "She", "They"),
hight = c(5.4, 6, 5.8),
right_handed = c(TRUE, FALSE, FALSE))
df
df[, 1]
x<-2
y<-seq(5,30,5)
x+y
a<-"a"
x<-8
x+a
b<-"8"
a+b
a
b
a+b
b+a
a+as.character(x)
as.character(x) + x
as.character(x) + a
a
b
a&b
x <- c(6:10)
x
names(x) <- c("first", "second", "third", "fourth", "fifth")
x['fourth']
x[['fourth']
]
x[['fourth']]
my_info <- list("Gema", 5.4, TRUE)
my_info
names(my_info)
my_info <- list(name = "Gema",
height = 5.4,
right_handed = TRUE)
names(my_info)
my_info[2]
my_info[2]+2
my_info[[2]]+2
my_info[4]
my_info[3]
my_info <- list(name = "Gema",
height = 5.4,
right_handed = TRUE,
courses = c("DATA531","DATA532"))
my_info
my_info[4]
my_info[4][2]
my_info[[4]][2]
my_info[4][2]
my_info[4]
my_info$courses
my_info["courses"]
df<- data.frame( name = c("I", "She", "They"),
hight = c(5.4, 6, 5.8),
right_handed = c(TRUE, FALSE, FALSE))
df
df[1]
df[1][0]
df[1][1]
df[1][2]
df[2]
df&height
df&hight
df
df&right_handed
str(df)
df
df[3][2]
df[3]
df[3,2]
df[3][2]
df$right_handed
df$hight
df$hight[0]
df$hight[1]
df[1]
df[1,1]
df[2]
df[,2]
df[1,]
df[1,]*3
df[2][3]
x<-5
if (x>5){print("hello")} else if (x==5) {print("2")} else {print("3")}
1
if (x>5){print("hello")} else if (x==5) {print("2")} else {print("3")}
system.file(package='tidyverse')
system.file(package='ggplot2')
library(tidyverse,quietly = TRUE)
data
data()
data("BJsales")
x<-data("BJsales")
x
x$BJsales
str(x)
data(BJsales)
x<-data(BJsales)
x
BJsales
x<-BJsales
x
str(x)
str(BJsales.lead)
1-pt(0.33,8)
2*(1-pt(0.33,8))
pt(-1.5383,8)
pt(-1.5383,8)*2
pt(-0.367,8)*2
-1.109/3.026
-3.755/2.441
2*(pt(-3.755/2.441,8))
2*(pt(-1.109/3.026,8))
knitr::opts_chunk$set(echo = TRUE)
library("RMySQL")
library("RSQLite")
library("DBI")
setwd("C:/Users/Dhuns/Documents/ubc/school_work/block_2/data_540/submissions/lab3-Dhunsheth")
knitr::opts_chunk$set(echo = TRUE)
library("DBI")
library("RMySQL")
library("RSQLite")
con <- dbConnect(RMySQL::MySQL(), user='dsheth', password='32376881',
dbname='tpch', host='cosc304.ok.ubc.ca')
query <- sprintf("
select ps_partkey, ps_suppkey, year(l_shipdate),
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey
group by ps_partkey, ps_suppkey, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
limit 10
"
)
part_2_res <- dbGetQuery(con, query)
part_2_res
con_sqlite <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con_sqlite, "part_3_sqlite", part_2_res)
data <- dbGetQuery(con_sqlite,"SELECT * FROM part_3_sqlite")
data
query <- "
select ps_partkey, ps_suppkey, year(l_shipdate),
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey
group by ps_partkey, ps_suppkey, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
limit 10
"
part_2_res <- dbGetQuery(con, query)
part_2_res
con_sqlite <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con_sqlite, "part_3_sqlite", part_2_res)
data <- dbGetQuery(con_sqlite,"SELECT * FROM part_3_sqlite")
data
query <- "
select ps_partkey, ps_suppkey, year(l_shipdate),
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey
group by ps_partkey, ps_suppkey, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
"
part_2_res <- dbGetQuery(con, query)
part_2_res[1:10]
part_2_res
query <- "
select ps_partkey, ps_suppkey, year(l_shipdate),
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey
group by ps_partkey, ps_suppkey, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
"
part_2_res <- dbGetQuery(con, query)
part_2_res[1:10,]
query <- "
select ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate),
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey
group by ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
"
part_2_res <- dbGetQuery(con, query)
part_2_res[1:10,]
query <- "
select ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate) as year,
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey
group by ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
"
part_2_res <- dbGetQuery(con, query)
part_2_res[1:10,]
con_sqlite <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con_sqlite, "part_3_sqlite", part_2_res)
data <- dbGetQuery(con_sqlite,"SELECT * FROM part_3_sqlite")
data
part_5_query <- "
select *
from part_3_sqlite
where year = 2018 and ps_availqty < shippedQuantity
limit 5
"
part_5_data <- dbGetQuery(con_sqlite, part_5_query)
print('Products with insufficient inventory based on 2018 sales:')
print(part_5_data)
part_5_query <- "
select *
from part_3_sqlite
where year = 2018 and ps_availqty < shippedQuantity
limit 5
"
part_5_data <- dbGetQuery(con_sqlite, part_5_query)
print('Products with insufficient inventory based on 2018 sales:')
print(part_5_data)
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_data
summary(part_6_reg)
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
plot(shippedQuantity ~ year)
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
plot(part_6_data['shippedQuantity'] ~ part_6_data['year'])
part_6_data
plot(part_6_data)
part_5_query <- "
select *
from part_3_sqlite
where year = 2018 and ps_availqty < shippedQuantity
limit 5
"
part_5_data <- dbGetQuery(con_sqlite, part_5_query)
print('Products with insufficient inventory based on 2018 sales:')
print(part_5_data)
part_6_reg$coefficients$year
part_6_reg$coefficients
part_6_reg$coefficients
part_6_reg$coefficients[2]
part_6_reg$coefficients[2,2]
part_6_reg$coefficients[2][1]
part_6_reg$coefficients[2] * 5
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
reg_est_2019 <- part_6_reg$coefficients[2] * 2019 + part_6_reg$coefficients[1]
# plot(part_6_data)
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
reg_est_2019 <- part_6_reg$coefficients[2] * 2019 + part_6_reg$coefficients[1]
reg_est_2019
# plot(part_6_data)
reg_est_2019[1]
int(reg_est_2019)
reg_est_2019['year']
reg_est_2019['year'][1]
reg_est_2019$year[1]
reg_est_2019$year
reg_est_2019[1]
reg_est_2019['year']
reg_est_2019[['year']
]
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
reg_est_2019 <- part_6_reg$coefficients[2] * 2019 + part_6_reg$coefficients[1]
reg_est_2019[['year']]
# plot(part_6_data)
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
reg_est_2019 <- part_6_reg$coefficients[2] * 2019 + part_6_reg$coefficients[1]
print('Estimate for 2019 based on the regression is:')
reg_est_2019[['year']]
# plot(part_6_data)
part_7_query <- "
select *, (ps_availqty/shippedQuantity)*100 as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_query <- "
select *, (ps_availqty/shippedQuantity)*100 as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_data
dbGetQuery(con_sqlite, "select * from part_3_sqlite where shippedQuantity is null")
part_7_query <- "
select *, (ps_availqty/shippedQuantity) as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_data
part_7_query <- "
select *, format(round((ps_availqty/shippedQuantity), 2), nsmall = 2) as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_query <- "
select *, format(round((ps_availqty/shippedQuantity), 2)) as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_data
#format(round((ps_availqty/shippedQuantity), 2), nsmall = 2)
part_7_query <- "
select *, format(round((ps_availqty/shippedQuantity), 6)) as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_data
#format(round((ps_availqty/shippedQuantity), 2), nsmall = 2)
part_7_query <- "
select *, (ps_availqty/shippedQuantity) as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_data
#format(round((ps_availqty/shippedQuantity), 2), nsmall = 2)
part_7_query <- "
select *, round((ps_availqty/shippedQuantity),2) as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_data
#format(round((ps_availqty/shippedQuantity), 2), nsmall = 2)
plot(part_6_data)
knitr::opts_chunk$set(echo = TRUE)
library("DBI")
library("RMySQL")
library("RSQLite")
part_2_query <- "
select ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate) as year,
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey and l_suppkey = ps_suppkey
group by ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
"
part_2_res <- dbGetQuery(con, part_2_query)
part_2_res[1:10,]
dbDisconnect(con)
knitr::opts_chunk$set(echo = TRUE)
library("DBI")
library("RMySQL")
library("RSQLite")
con <- dbConnect(RMySQL::MySQL(), user='dsheth', password='32376881',
dbname='tpch', host='cosc304.ok.ubc.ca')
part_2_query <- "
select ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate) as year,
sum(l_quantity) as shippedQuantity
from partsupp join lineitem on l_partkey = ps_partkey and l_suppkey = ps_suppkey
group by ps_partkey, ps_suppkey, ps_availqty, year(l_shipdate)
order by ps_partkey, ps_suppkey, year(l_shipdate)
"
part_2_res <- dbGetQuery(con, part_2_query)
part_2_res[1:10,]
con_sqlite <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con_sqlite, "part_3_sqlite", part_2_res)
part_3_4_data <- dbGetQuery(con_sqlite,"SELECT * FROM part_3_sqlite")
part_3_4_data[1:10,]
part_5_query <- "
select *
from part_3_sqlite
where year = 2018 and ps_availqty < shippedQuantity
limit 5
"
part_5_data <- dbGetQuery(con_sqlite, part_5_query)
print('Products with insufficient inventory based on 2018 sales:')
part_5_data
part_6_query <- "
select year, shippedQuantity
from part_3_sqlite
where ps_partkey = 217 and ps_suppkey = 18
"
part_6_data <- dbGetQuery(con_sqlite, part_6_query)
part_6_reg <- lm(shippedQuantity ~ year, data=part_6_data)
summary(part_6_reg)
reg_est_2019 <- part_6_reg$coefficients[2] * 2019 + part_6_reg$coefficients[1]
print('Estimated Sales for 2019 based on the regression is:')
reg_est_2019[['year']]
# plot(part_6_data)
part_7_query <- "
select *, round((ps_availqty/shippedQuantity),2) as percentageOverstocked
from part_3_sqlite
where year = 2018 and shippedQuantity >= 6
order by percentageOverstocked desc
limit 10
"
part_7_data <- dbGetQuery(con_sqlite, part_7_query)
part_7_data
dbDisconnect(con)
dbDisconnect(con_sqlite)
